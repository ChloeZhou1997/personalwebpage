<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>config on My Personal Webpage</title>
    <link>http://example.org/tags/config/</link>
    <description>Recent content in config on My Personal Webpage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://example.org/tags/config/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Org &#43; Hugo &#43; Cloudflare for personal blog</title>
      <link>http://example.org/posts/hugo-quick-start/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/hugo-quick-start/</guid>
      <description>Hugo Quick setup Ox-Hugo Source of documentation:
ox-hugo manual for init.el Backlink 1(use-package ox-hugo 2	:after ox) Handing in org.file
I use one-page-per-post way to manage the post, the heading section looks the following:
1#+TITLE: 2#+AUTHOR: Chloe 3#+DATE: 2022-10-28 4#+HUGO_SECTION: posts 5#+HUGO_BASE_DIR:~/Blog 6#+HUGO_TAGS: 7#+EXPORT_HUGO_CATEGORIES: 8#+hugo_weight: auto 9#+HUGO_DRAFT: true 10#+hugo_auto_set_lastmod: t I use YASnipeet to generate the head section, so the date will be autogenerated to be the current date. Be aware that in ox-hugo, HUGO_BASE_DIR is mandentory, it determines where the root directory the exported .</description>
    </item>
    
    <item>
      <title>Lisp Project - Dotcrafter</title>
      <link>http://example.org/posts/emacs-lisp-00-final-project/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/emacs-lisp-00-final-project/</guid>
      <description>Use move-folder-to-config-files to move config folders into the /.dotfiles
Use move-file-to-config-files to move config files into the /.dotfiles
Use link-config-files to create symblink between the config files in the /.dotfiles and the home-directory
From function.org See: Interactive function
Define a command that automaticaly tangle the `.org` files in your dotfiles folder (this is used in the last section of the file.
(Not in actual production code)
1(defun 2	dotfiles-tangle-org-file(&amp;amp;optional org-file) 3	&amp;#34;Tangles a single .</description>
    </item>
    
  </channel>
</rss>
