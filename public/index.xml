<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chloe Jo</title>
    <link>/</link>
    <description>Recent content on Chloe Jo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Emacs for bookmark management</title>
      <link>/posts/using-emacs-for-bookmark-management/</link>
      <pubDate>Tue, 08 Nov 2022 13:05:00 -0500</pubDate>
      
      <guid>/posts/using-emacs-for-bookmark-management/</guid>
      <description>This post is inspired by Mike Zamansky&amp;rsquo;s video channel on youtube1.Since I am now using Arc as my main browser so usually I don&amp;rsquo;t usually need to manage my bookmark, sometimes when I saw interesting blogs and information, I still want to have it somewhere and preferably an annotation to tell me why I store it at the first place, to have this sort of bookmark in my emacs comes in handy.</description>
    </item>
    
    <item>
      <title>Computer Systems: A Programmer&#39;s Perspective</title>
      <link>/posts/bryantcomputersystemsprogrammer2015/</link>
      <pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/bryantcomputersystemsprogrammer2015/</guid>
      <description>tags :
keywords :
Info </description>
    </item>
    
    <item>
      <title>Notes for The Brothers Karamazov</title>
      <link>/posts/dostoyevskybrotherskaramazov2012/</link>
      <pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/dostoyevskybrotherskaramazov2012/</guid>
      <description>tags Fiction/Classics author Fyodor Dostoevsky Motivation for reading Heavily referenced in Camus&amp;rsquo; Rabel.
Memo Quote Ivan&amp;rsquo;s view of the physical world and religion I have a Euclidian earthly mind, and how could I solve problems that are not of this world? And I advise you never to think about it either, my dear Alyosha, especially about God, whether He exists or not. All such questions are utterly inappropriate for a mind created with an idea of only three dimensions.</description>
    </item>
    
    <item>
      <title>readinglists</title>
      <link>/bookshelves/</link>
      <pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/bookshelves/</guid>
      <description>I am a heavy reader who loves reading about philosophy, history and politics. I also love classic literature a lot. Sometimes I read reviews, analyses and background stories that relate to the pieces I am reading and the desire to put all those dots together motivates me to create this site in the first place.
This page is dedicated to the list of books and articles I have read and currently reading that I find inspiring and interesting.</description>
    </item>
    
    <item>
      <title>Configuring org-protocol in AMD build MacOS</title>
      <link>/posts/emacs-config-org-protocol/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/emacs-config-org-protocol/</guid>
      <description>This is a post on configuring org-protocol for people using Emacs on MacOS with AMD chips. The documentary only contains configuration for up to MacOs built on Intel chips. I will also include the steps I have taken to figure the problem out with very limited programming and computer background knowledge.
First, load org-protocol.el to the init.el configuration file:
1(server-start) 2(add-to-list &amp;#39;load-path &amp;#34;~/path/to/org/protocol/&amp;#34;) 3(require &amp;#39;org-protocol) Note that org-protocol.el comes with the org-mode so it&amp;rsquo;s not in any package archives.</description>
    </item>
    
    <item>
      <title>Emacs Configuration</title>
      <link>/posts/emacs/</link>
      <pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/emacs/</guid>
      <description>Rewrite my config to get rid of the redunant functions and build the system from stratch using straight.el for package management.
Package System Setup use-package GitRepo for the documentations. See quick tutorial for how to use use-package use-package is a way to organize the code neat but itself is not a pckage manager.
Few most common keywords:
:init : executing the keywords before the code is executed.
:config: executing codes after the package is loaded</description>
    </item>
    
    <item>
      <title>Org &#43; Hugo &#43; Cloudflare for personal blog</title>
      <link>/posts/hugo-quick-start/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugo-quick-start/</guid>
      <description>Hugo Quick setup Ox-Hugo Source of documentation:
ox-hugo manual for init.el Backlink 1(use-package ox-hugo 2	:after ox) Handing in org.file
I use one-page-per-post way to manage the post, the heading section looks the following:
1#+TITLE: 2#+AUTHOR: Chloe 3#+DATE: 2022-10-28 4#+HUGO_SECTION: posts 5#+HUGO_BASE_DIR:~/Blog 6#+HUGO_TAGS: 7#+EXPORT_HUGO_CATEGORIES: 8#+hugo_weight: auto 9#+HUGO_DRAFT: true 10#+hugo_auto_set_lastmod: t I use YASnipeet to generate the head section, so the date will be autogenerated to be the current date. Be aware that in ox-hugo, HUGO_BASE_DIR is mandentory, it determines where the root directory the exported .</description>
    </item>
    
    <item>
      <title>Learning Elisp 01 Functions</title>
      <link>/posts/emacs-lisp-01-functions/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/emacs-lisp-01-functions/</guid>
      <description>Define a function Specify the `&amp;amp;optional` or `&amp;amp;rest` argument in the arguments
1 2(defun multiply-many (x &amp;amp;optional y &amp;amp;rest operands) 3	&amp;#34;Multiplying the result of math expression on the arguments X, Y and OPERANDS&amp;#34; 4	(dolist (i operands) 5	(when i 6	(setq x (* x 7	(or y 1) 8	i)))) 9	x) 10 11(multiply-many 2 3 8 19) Function wihtout names Lambda function - a function without a name</description>
    </item>
    
    <item>
      <title>Learning Elisp 02 Variable and Scope</title>
      <link>/posts/emacs-lisp-02-variable-and-scope/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/emacs-lisp-02-variable-and-scope/</guid>
      <description>Variables Set vairbales and Define vairables are different Define Buffer-local variables Understanding variable scopes Creating Variable scope with let Defining and setting customization variables Variable is a symbol that binds with a value : &#39;tab-width-&amp;gt; 4
Set variables Variables are symbols binds to values, what setq means is &amp;ldquo;set quote&amp;rdquo;, a convient way to write
1 2(set &amp;#39;tab-width 4) 3 4;; The variable doesn&amp;#39;t have to exist or be pre-defined 5 6(set &amp;#39;i-dont-exist 5) Documenting Variables defvar allows one to assign documentations to the created variables</description>
    </item>
    
    <item>
      <title>Learning Elisp 03 Reading and Writing Buffer in Emacs</title>
      <link>/posts/emacs-lisp-03-reading-and-writing-buffers/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/emacs-lisp-03-reading-and-writing-buffers/</guid>
      <description>Basic API for Emacs Buffers Buffers may be visible or not.
Manipulating Buffer Current buffer 1(current-buffer) Get buffer by name or create one (get-buffer-create) 1 2(get-buffer &amp;#34;*scratch*&amp;#34;) Create a buffer if it doesn&amp;rsquo;t already exist:
1 2(get-buffer-create &amp;#34;Hello World&amp;#34;) Changing the current buffer (set-buffer) 1(progn 2	(set-buffer (get-buffer &amp;#34;*scratch*&amp;#34;)) 3	(current-buffer)) 4 5;;equivalently 6(progn 7	(set-buffer &amp;#34;*scratch*&amp;#34;) 8	(current-buffer)) progn is an expression that allows you to run multiple expression inside of the body.</description>
    </item>
    
    <item>
      <title>Lisp Project - Dotcrafter</title>
      <link>/posts/emacs-lisp-00-final-project/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/emacs-lisp-00-final-project/</guid>
      <description>Use move-folder-to-config-files to move config folders into the /.dotfiles
Use move-file-to-config-files to move config files into the /.dotfiles
Use link-config-files to create symblink between the config files in the /.dotfiles and the home-directory
From function.org See: Interactive function
Define a command that automaticaly tangle the `.org` files in your dotfiles folder (this is used in the last section of the file.
(Not in actual production code)
1(defun 2	dotfiles-tangle-org-file(&amp;amp;optional org-file) 3	&amp;#34;Tangles a single .</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>/about/</link>
      <pubDate>Wed, 24 Aug 2016 17:51:42 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Github: monkeyWzr</description>
    </item>
    
  </channel>
</rss>
